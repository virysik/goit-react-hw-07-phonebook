{"version":3,"sources":["services/contacts-api.js","redux/phonebook/contacts-operations.js","redux/phonebook/contacts-selectors.js","App.styles.js","components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebook-reducer.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","components/ContactList/ContactList.styles.js","components/ContactListElement/ContactListElement.styles.js","components/ContactListElement/ContactListElement.js","components/ContactList/ContactList.js","components/Spinner/Spinner.js","App.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","fetchContactsApi","a","get","data","fetchPostNewContact","contact","post","removeContactById","id","delete","fetchContacts","createAsyncThunk","contacts","fetchAddContact","fetchDeleteContact","getStatus","state","status","getItems","items","getFilter","filter","getContactsArr","createSelector","item","name","toLowerCase","includes","number","Container","styled","div","Title","h1","TitleContacts","h2","Form","form","Input","input","Label","label","Button","button","ContactForm","useState","setName","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","handleInputChange","e","currentTarget","value","Error","resetFormInputs","showAlert","toast","style","color","icon","onSubmit","preventDefault","normalizedName","contactExists","find","numberExists","contactsOperations","onChange","type","autoComplete","pattern","title","required","loading","error","phonebookSlice","createSlice","initialState","reducers","changeFilter","action","payload","extraReducers","fulfilled","pending","rejected","actions","Filter","target","Ul","ul","Li","li","Span","span","ContactListElement","contactId","contactName","contactNumber","onDelete","onClick","ContactList","contactsArr","map","Spinner","height","width","timeout","App","console","log","useEffect","length","middleware","thunk","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38e347de.chunk.js","sourcesContent":["import axios from 'axios'\n\naxios.defaults.baseURL = 'http://localhost:3004'\n\nexport const fetchContactsApi = async () => {\n  const { data } = await axios.get('/contacts')\n  return data\n}\n\nexport const fetchPostNewContact = async (contact) => {\n  const { data } = await axios.post('/contacts', contact)\n  return data\n}\n\nexport const removeContactById = async (id) => {\n  await axios.delete(`/contacts/${id}`)\n  return id\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  fetchContactsApi,\n  fetchPostNewContact,\n  removeContactById,\n} from '../../services/contacts-api'\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const contacts = await fetchContactsApi()\n    return contacts\n  },\n)\n\nexport const fetchAddContact = createAsyncThunk(\n  'contacts/addContact',\n  async (contact) => {\n    const contacts = await fetchPostNewContact(contact)\n    return contacts\n  },\n)\n\nexport const fetchDeleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id) => {\n    const contacts = await removeContactById(id)\n    return contacts\n  },\n)\n","import { createSelector } from 'reselect'\n\nexport const getStatus = (state) => state.contacts.status\n\nexport const getItems = (state) => state.contacts.items\nexport const getFilter = (state) => state.contacts.filter\n\nexport const getContactsArr = createSelector(\n  [getItems, getFilter],\n  (items, filter) =>\n    items.filter(\n      (item) =>\n        item.name.toLowerCase().includes(filter.toLowerCase()) ||\n        item.number.includes(filter),\n    ),\n)\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  margin-left: 20px;\n  padding: 20px;\n  width: 420px;\n  background: #f2f2f0;\n  border: 4px double #1b3c59;\n  border-radius: 36px;\n  box-shadow: 4px 3px 20px rgba(27, 60, 89, 0.2);\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 40px;\n  color: #456173;\n`;\nexport const TitleContacts = styled.h2`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 30px;\n  color: #456173;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n  padding: 10px;\n  border: 2px dashed #456173;\n`;\nexport const Input = styled.input`\n  position: absolute;\n  top: 30px;\n  left: 0px;\n  min-width: 200px;\n  height: 20px;\n  padding: 4px 10px;\n  border: 2px solid #1b3c59;\n  border-radius: 2px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #11bfae;\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 42px;\n  color: #1b3c59;\n  font-size: 20px;\n`;\nexport const Button = styled.button`\n  margin-top: 20px;\n  margin-bottom: 10px;\n  padding: 6px 8px;\n  width: 130px;\n\n  font-size: 18px;\n  font-weight: 700;\n  color: #f2f2f0;\n  background-color: #11bfae;\n  border-radius: 4px;\n  border: transparent;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #11bfae;\n    background-color: #456173;\n  }\n`;\n","import { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { contactsOperations, contactsSelectors } from 'redux/phonebook'\nimport { Form, Label, Input, Button } from './ContactForm.styles'\nimport { GiButterflyWarning } from 'react-icons/gi'\nimport toast from 'react-hot-toast'\n\nfunction ContactForm() {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const items = useSelector(contactsSelectors.getItems)\n  const dispatch = useDispatch()\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget\n\n    switch (name) {\n      case 'name':\n        return setName(value)\n\n      case 'number':\n        return setNumber(value)\n\n      default:\n        throw new Error(`there is no such name as ${name}`)\n    }\n  }\n\n  const resetFormInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const showAlert = (value) => {\n    toast(`${value} is already in contacts`, {\n      style: { color: '#456173' },\n      icon: <GiButterflyWarning />,\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const normalizedName = name.toLowerCase()\n    const contactExists = items.find(\n      ({ name }) => name.toLowerCase() === normalizedName,\n    )\n    const numberExists = items.find((item) => item.number === number)\n\n    if (contactExists) {\n      showAlert(name)\n      resetFormInputs()\n      return\n    }\n\n    if (numberExists) {\n      showAlert(number)\n      resetFormInputs()\n      return\n    }\n\n    dispatch(contactsOperations.fetchAddContact({ name, number }))\n    resetFormInputs()\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  )\n}\n\nexport default ContactForm\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  fetchContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n} from './contacts-operations'\n\nconst initialState = {\n  items: [],\n  filter: '',\n  status: null,\n  error: null,\n}\n\nconst loading = 'Loading'\nconst error = 'Error'\n\nconst phonebookSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    changeFilter: (state, action) => {\n      state.filter = action.payload\n    },\n  },\n\n  extraReducers: {\n    [fetchContacts.fulfilled]: (state, action) => {\n      state.items = action.payload\n      state.status = null\n      state.error = null\n    },\n    [fetchContacts.pending]: (state, action) => {\n      state.status = loading\n      state.error = null\n    },\n    [fetchContacts.rejected]: (state, action) => {\n      state.status = null\n      state.error = error\n    },\n    [fetchAddContact.fulfilled]: (state, action) => {\n      state.items = [...state.items, action.payload]\n      state.status = null\n      state.error = null\n    },\n    [fetchAddContact.pending]: (state, action) => {\n      state.status = loading\n      state.error = null\n    },\n    [fetchAddContact.rejected]: (state, action) => {\n      state.status = null\n      state.error = error\n    },\n    [fetchDeleteContact.fulfilled]: (state, action) => {\n      state.items = state.items.filter((item) => item.id !== action.payload)\n      state.status = null\n      state.error = null\n    },\n    [fetchDeleteContact.pending]: (state, action) => {\n      state.status = loading\n      state.error = null\n    },\n    [fetchDeleteContact.rejected]: (state, action) => {\n      state.status = null\n      state.error = error\n    },\n  },\n})\n\nexport const { changeFilter } = phonebookSlice.actions\nexport default phonebookSlice.reducer\n","import styled from \"@emotion/styled\";\n\nexport const Input = styled.input`\n  position: absolute;\n  top: 30px;\n  left: 0px;\n  min-width: 200px;\n  height: 20px;\n  padding: 4px 10px;\n  border: 2px solid #1b3c59;\n  border-radius: 2px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #11bfae;\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 50px;\n  color: #1b3c59;\n  font-size: 20px;\n`;\n","import { useDispatch } from 'react-redux'\nimport { changeFilter } from '../../redux/phonebook/phonebook-reducer'\nimport { Label, Input } from './Filter.styles'\n\nfunction Filter() {\n  const dispatch = useDispatch()\n\n  return (\n    <Label>\n      Find contacts by name:\n      <Input\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\n        type=\"text\"\n        name=\"filter\"\n      ></Input>\n    </Label>\n  )\n}\n\nexport default Filter\n","import styled from \"@emotion/styled\";\n\nexport const Ul = styled.ul`\n  margin: 0;\n  margin-top: 56px;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: 4px;\n  color: #1b3c59;\n  font-size: 18px;\n`;\nexport const Button = styled.button`\n  margin-left: auto;\n  padding: 8px 16px;\n\n  font-size: 14px;\n  font-weight: 700;\n  color: #f2f2f0;\n  background-color: #1b3c59;\n  border-radius: 4px;\n  border: transparent;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #456173;\n  }\n`;\nexport const Span = styled.span`\n  margin-right: 20px;\n`;\n","import { Li, Button, Span } from './ContactListElement.styles'\nimport { IoIosContact } from 'react-icons/io'\nimport PropTypes from 'prop-types'\n\nfunction ContactListElement({\n  contactId,\n  contactName,\n  contactNumber,\n  onDelete,\n}) {\n  return (\n    <Li>\n      <Span>\n        <IoIosContact />\n      </Span>\n      {`${contactName}: ${contactNumber}`}\n      <Button\n        type=\"button\"\n        onClick={() => {\n          onDelete(contactId)\n        }}\n      >\n        Delete\n      </Button>\n    </Li>\n  )\n}\n\nexport default ContactListElement\n\nContactListElement.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { contactsOperations, contactsSelectors } from 'redux/phonebook'\nimport { Ul } from './ContactList.styles'\nimport ContactListElement from '../ContactListElement'\n\nfunction ContactList() {\n  const contactsArr = useSelector(contactsSelectors.getContactsArr)\n  const dispatch = useDispatch()\n\n  return (\n    <Ul>\n      {contactsArr.map(({ id, name, number }) => {\n        return (\n          <ContactListElement\n            key={id}\n            contactId={id}\n            contactName={name}\n            contactNumber={number}\n            onDelete={() => dispatch(contactsOperations.fetchDeleteContact(id))}\n          />\n        )\n      })}\n    </Ul>\n  )\n}\n\nexport default ContactList\n","import Loader from 'react-loader-spinner'\n\nexport default function Spinner() {\n  return (\n    <Loader\n      type=\"ThreeDots\"\n      color=\"#456173\"\n      height={100}\n      width={100}\n      timeout={1000}\n    />\n  )\n}\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { contactsOperations, contactsSelectors } from 'redux/phonebook'\nimport { Container, Title, TitleContacts } from './App.styles'\nimport { TiContacts } from 'react-icons/ti'\nimport { IoIosContacts } from 'react-icons/io'\nimport { Toaster } from 'react-hot-toast'\nimport ContactForm from './components/ContactForm'\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\nimport Spinner from './components/Spinner'\n\nfunction App() {\n  const contacts = useSelector(contactsSelectors.getItems)\n  const status = useSelector(contactsSelectors.getStatus)\n  const dispatch = useDispatch()\n  console.log(status)\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts())\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Title>\n        <TiContacts /> Phonebook\n      </Title>\n      <ContactForm />\n      {contacts.length > 0 ? (\n        <>\n          <TitleContacts>\n            <IoIosContacts />\n            Contacts\n          </TitleContacts>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <Spinner />\n      )}\n      <Toaster />\n    </Container>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport logger from 'redux-logger'\nimport phonebookReducer from './phonebook/phonebook-reducer'\nimport thunk from 'redux-thunk'\n\nlet middleware = [thunk]\nif (process.env.NODE_ENV === `development`) {\n  middleware.push(logger)\n}\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware,\n})\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}