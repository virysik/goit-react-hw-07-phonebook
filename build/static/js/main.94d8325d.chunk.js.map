{"version":3,"sources":["App.styles.js","components/ContactForm/ContactForm.styles.js","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","components/ContactList/ContactList.styles.js","components/ContactListElement/ContactListElement.styles.js","components/ContactListElement/ContactListElement.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/phonebook/phonebook-reducer-helpers.js","redux/store.js","index.js"],"names":["Container","styled","div","Title","h1","TitleContacts","h2","Form","form","Input","input","Label","label","Button","button","addContact","createAction","deleteContact","changeFilter","connect","items","contacts","dispatch","onSubmit","name","number","id","useState","setName","setNumber","handleInputChange","e","currentTarget","value","Error","resetFormInputs","preventDefault","normalizedName","toLowerCase","find","toast","style","color","icon","nanoid","onChange","type","autoComplete","pattern","title","required","target","Ul","ul","Li","li","Span","span","ContactListElement","contactId","contactName","contactNumber","onDelete","onClick","getFilteredContact","allItems","filter","normalazedFilter","includes","contactsArr","map","App","createReducer","state","action","payload","addContactFn","deleteContactFn","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","middleware","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.94d8325d.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  margin-left: 20px;\n  padding: 20px;\n  width: 420px;\n  background: #f2f2f0;\n  border: 4px double #1b3c59;\n  border-radius: 36px;\n  box-shadow: 4px 3px 20px rgba(27, 60, 89, 0.2);\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 40px;\n  color: #456173;\n`;\nexport const TitleContacts = styled.h2`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 30px;\n  color: #456173;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n  padding: 10px;\n  border: 2px dashed #456173;\n`;\nexport const Input = styled.input`\n  position: absolute;\n  top: 30px;\n  left: 0px;\n  min-width: 200px;\n  height: 20px;\n  padding: 4px 10px;\n  border: 2px solid #1b3c59;\n  border-radius: 2px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #11bfae;\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 42px;\n  color: #1b3c59;\n  font-size: 20px;\n`;\nexport const Button = styled.button`\n  margin-top: 20px;\n  margin-bottom: 10px;\n  padding: 6px 8px;\n  width: 130px;\n\n  font-size: 18px;\n  font-weight: 700;\n  color: #f2f2f0;\n  background-color: #11bfae;\n  border-radius: 4px;\n  border: transparent;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #11bfae;\n    background-color: #456173;\n  }\n`;\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const addContact = createAction('phonebook/addContact')\nexport const deleteContact = createAction('phonebook/deleteContact')\nexport const changeFilter = createAction('phonebook/changeFilter')\n","import { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Label, Input, Button } from './ContactForm.styles'\nimport { addContact } from '../../redux/phonebook/phonebook-actions'\nimport { GiButterflyWarning } from 'react-icons/gi'\nimport { nanoid } from 'nanoid'\nimport toast from 'react-hot-toast'\nimport PropTypes from 'prop-types'\n\nfunction ContactForm({ items, onSubmit }) {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget\n\n    switch (name) {\n      case 'name':\n        return setName(value)\n\n      case 'number':\n        return setNumber(value)\n\n      default:\n        throw new Error(`there is no such name as ${name}`)\n    }\n  }\n\n  const resetFormInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const normalizedName = name.toLowerCase()\n    const contactExists = items.find(\n      ({ name }) => name.toLowerCase() === normalizedName,\n    )\n\n    if (contactExists) {\n      toast(`${name} is already in contacts`, {\n        style: { color: '#456173' },\n        icon: <GiButterflyWarning />,\n      })\n      resetFormInputs()\n      return\n    }\n    const id = nanoid()\n    onSubmit({ name, number, id })\n    resetFormInputs()\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  )\n}\n\nconst makeStateToProps = ({ contacts: { items } }) => ({\n  items,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: ({ name, number, id }) =>\n    dispatch(addContact({ name, number, id })),\n})\n\nexport default connect(makeStateToProps, mapDispatchToProps)(ContactForm)\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n}\n","import styled from \"@emotion/styled\";\n\nexport const Input = styled.input`\n  position: absolute;\n  top: 30px;\n  left: 0px;\n  min-width: 200px;\n  height: 20px;\n  padding: 4px 10px;\n  border: 2px solid #1b3c59;\n  border-radius: 2px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #11bfae;\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 50px;\n  color: #1b3c59;\n  font-size: 20px;\n`;\n","import { connect } from 'react-redux'\nimport { Label, Input } from './Filter.styles'\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions'\nimport PropTypes from 'prop-types'\n\nfunction Filter({ onChange }) {\n  return (\n    <Label>\n      Find contacts by name:\n      <Input onChange={onChange} type=\"text\" name=\"filter\"></Input>\n    </Label>\n  )\n}\n\nconst makeDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\n})\n\nexport default connect(null, makeDispatchToProps)(Filter)\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n}\n","import styled from \"@emotion/styled\";\n\nexport const Ul = styled.ul`\n  margin: 0;\n  margin-top: 56px;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: 4px;\n  color: #1b3c59;\n  font-size: 18px;\n`;\nexport const Button = styled.button`\n  margin-left: auto;\n  padding: 8px 16px;\n\n  font-size: 14px;\n  font-weight: 700;\n  color: #f2f2f0;\n  background-color: #1b3c59;\n  border-radius: 4px;\n  border: transparent;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #456173;\n  }\n`;\nexport const Span = styled.span`\n  margin-right: 20px;\n`;\n","import { Li, Button, Span } from './ContactListElement.styles'\nimport { IoIosContact } from 'react-icons/io'\nimport PropTypes from 'prop-types'\n\nfunction ContactListElement({\n  contactId,\n  contactName,\n  contactNumber,\n  onDelete,\n}) {\n  return (\n    <Li>\n      <Span>\n        <IoIosContact />\n      </Span>\n      {`${contactName}: ${contactNumber}`}\n      <Button\n        type=\"button\"\n        onClick={() => {\n          onDelete(contactId)\n        }}\n      >\n        Delete\n      </Button>\n    </Li>\n  )\n}\n\nexport default ContactListElement\n\nContactListElement.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n","import { Ul } from './ContactList.styles'\nimport { connect } from 'react-redux'\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions'\nimport ContactListElement from '../ContactListElement'\nimport PropTypes from 'prop-types'\n\nfunction ContactList({ contactsArr, onDelete }) {\n  return (\n    <Ul>\n      {contactsArr.map(({ id, name, number }) => {\n        return (\n          <ContactListElement\n            key={id}\n            contactId={id}\n            contactName={name}\n            contactNumber={number}\n            onDelete={() => onDelete(id)}\n          />\n        )\n      })}\n    </Ul>\n  )\n}\n\nconst getFilteredContact = (allItems, filter) => {\n  const normalazedFilter = filter.toLowerCase()\n\n  return allItems.filter(({ name }) =>\n    name.toLowerCase().includes(normalazedFilter),\n  )\n}\n\nconst makeStateToProps = ({ contacts: { items, filter } }) => ({\n  contactsArr: getFilteredContact(items, filter),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(deleteContact(id)),\n})\n\nexport default connect(makeStateToProps, mapDispatchToProps)(ContactList)\n\nContactList.propTypes = {\n  contactsArr: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n","import { Container, Title, TitleContacts } from './App.styles'\nimport { TiContacts } from 'react-icons/ti'\nimport { IoIosContacts } from 'react-icons/io'\nimport { Toaster } from 'react-hot-toast'\nimport ContactForm from './components/ContactForm'\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\n\nfunction App() {\n  return (\n    <Container>\n      <Title>\n        <TiContacts /> Phonebook\n      </Title>\n      <ContactForm />\n      <TitleContacts>\n        <IoIosContacts />\n        Contacts\n      </TitleContacts>\n      <Filter />\n      <ContactList />\n      <Toaster />\n    </Container>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { addContactFn, deleteContactFn } from './phonebook-reducer-helpers'\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions'\n\nconst items = createReducer([], {\n  [addContact]: (state, action) => addContactFn(state, action),\n  [deleteContact]: (state, action) => deleteContactFn(state, action),\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n})\n\nexport default combineReducers({ items, filter })\n","export const addContactFn = (state, { payload }) => {\n  return [payload, ...state]\n}\n\nexport const deleteContactFn = (state, { payload }) =>\n  state.filter(({ id }) => id !== payload)\n","import { configureStore } from '@reduxjs/toolkit'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport logger from 'redux-logger'\nimport phonebookReducer from './phonebook/phonebook-reducer'\n\nconst persistConfig = {\n  key: 'items',\n  storage,\n  blacklist: ['filter'],\n}\n\nconst middleware = []\n\nif (process.env.NODE_ENV === `development`) {\n  middleware.push(logger)\n}\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, phonebookReducer),\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware,\n})\n\nexport const persistor = persistStore(store)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistor } from './redux/store'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}